#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_42keys.h"

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5 // left-hand keys
/* ╭─────────────────────────╮
   │ LT5 LT4 LT3 LT2 LT1 LT0 │
   │ LM5 LM4 LM3 LM2 LM1 LM0 │
   │ LB5 LB4 LB3 LB2 LB1 LB0 │
   ╰───────────╮ ___ ___ ___ │
               ╰─────────────╯ */

#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right-hand keys
/* ╭─────────────────────────╮
   │ RT0 RT1 RT2 RT3 RT4 RT5 │
   │ RM0 RM1 RM2 RM3 RM4 RM5 │
   │ RB0 RB1 RB2 RB3 RB4 RB5 │
   │ ___ ___ ___ ╭───────────╯
   ╰─────────────╯ */

#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

/* left-hand HRMs */
ZMK_BEHAVIOR(hml, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

/* right-hand HRMs */
ZMK_BEHAVIOR(hmr, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};

/ {keymap {compatible = "zmk,keymap";
           default_layer {label = "QWERTY";
                          bindings = <
  &kp TAB        &kp Q        &kp W         &kp E         &kp R      &kp T      &kp Y            &kp U         &kp I        &kp O           &kp P    &kp BSPC
&kp LCTRL  &hml LGUI A  &hml LALT S  &hml LCTRL D  &hml LSHFT F      &kp G      &kp H    &hmr RSHIFT J  &hmr RCTRL K  &hmr RALT L  &hmr RGUI SEMI     &kp SQT
&kp LSHFT        &kp Z        &kp X         &kp C         &kp V      &kp B      &kp N            &kp M     &kp COMMA      &kp DOT        &kp FSLH  &kp RSHIFT
                                         &kp LGUI         &mo 1  &kp SPACE    &kp RET            &mo 2      &kp RALT
                                     >;
                         };
           lower_layer {label = "NUMBER";
                        bindings = <
 &kp ESC  &kp N1  &kp N2    &kp N3  &kp N4     &kp N5            &kp N6                         &kp N7    &kp N8     &kp N9  &kp N0          &kp DEL
  &trans  &trans  &trans    &trans  &trans     &trans          &kp LEFT                       &kp DOWN    &kp UP  &kp RIGHT  &trans           &trans
  &trans  &trans  &trans    &trans  &trans     &trans            &trans                         &trans    &trans     &trans  &trans  &kp RIGHT_SHIFT
                          &kp LGUI  &trans  &kp SPACE           &kp RET                          &mo 3  &kp RALT
                                   >;
                       };
           raise_layer {label = "SYMBOL";
                        bindings = <
   &kp ESC  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT          &kp CARET    &kp LEFT_PARENTHESIS   &kp AMPS  &kp RIGHT_PARENTHESIS  &kp KP_MULTIPLY   &kp BSPC
 &kp LCTRL    &trans  &trans    &trans    &trans     &trans          &kp MINUS        &kp LEFT_BRACKET  &kp EQUAL               &kp RBKT         &kp BSLH  &kp GRAVE
 &kp LSHFT    &trans  &trans    &trans    &trans     &trans          &kp UNDER          &kp LEFT_BRACE   &kp PLUS               &kp RBRC         &kp PIPE  &kp TILDE
                              &kp LGUI     &mo 3  &kp SPACE            &kp RET                  &trans   &kp RALT
                                   >;
                       };
           bt_layer {label = "CONFIG";
                     bindings = <
     &trans        &trans        &trans        &trans        &trans   &bootloader          &bootloader  &trans  &trans  &trans  &trans  &trans
 &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4               &trans  &trans  &trans  &trans  &trans  &trans
     &trans        &trans        &trans        &trans        &trans        &trans               &trans  &trans  &trans  &trans  &trans  &trans
                                               &trans        &trans        &trans               &trans  &trans  &trans
                                >;
                    };
          };
};
